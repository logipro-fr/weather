openapi: 3.0.3
info:
  title: Weather API
  version: 1.0.0
  description: >-
    Documentation for Weather API.

    Weather is a service of Logipro company.

paths:
  /api/v1/fetch:
    get:
      tags:
        - Weather
      summary: Return weather from outside API
      description: >-
        Fetches the weather from an API based on point(s) and a date.
      parameters:
        - $ref: "#/components/parameters/DateTimeParam"
        - $ref: "#/components/parameters/PointsParam"
      responses:
        "200":
          $ref: '#components/responses/MultiWeather'
        "400":
          $ref: '#components/responses/CommonMalformed'
        "502":
          $ref: '#components/responses/ExternalError'


  /api/v1/data/by-id:
    get:
      tags:
        - Weather
      summary: Return weather with the corresponding ID
      description: >-
        Searches database for the weather based on it's ID.
      parameters:
        - $ref: "#/components/parameters/IdParam"
      responses:
        "200":
          $ref: '#components/responses/SingleWeather'
        "404":
          $ref: '#components/responses/CommonNotFound'

  /api/v1/data/by-date-point:
    get:
      tags:
        - Weather
      summary: Return weather for the corresponding date and point
      description: >-
        Searches database for the weather based on it's date and point.
      parameters:
        - $ref: "#/components/parameters/PointParam"
        - $ref: "#/components/parameters/DateTimeParam"
        - $ref: "#/components/parameters/HistoricalParam"
        - $ref: "#/components/parameters/ExactParam"
      responses:
        "200":
          $ref: '#components/responses/SingleWeather'
        "400":
          $ref: '#components/responses/CommonMalformed'
        "404":
          $ref: '#components/responses/CommonNotFound'

  /api/v1/legacy/file:
    get:
      tags:
        - Legacy
      summary: Fetches legacy data from files
      description: >-
        Fetches legacy data from files
      responses:
        "200":
          $ref: "#/components/responses/LegacyImport"  

  /api/v1/hello:
    get:
      tags:
        - Misc
      summary: Returns Hello World
      description: >-
        Returns a simple hello world json
      responses:
        "200":
          description: Hello World
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Hello"  

components:
  schemas:
    BaseResponse:
      $ref: '../models/schemas.yaml#/BaseResponseSchema'

    WeatherInfo:
      $ref: '../models/schemas.yaml#/WeatherInfoSchema'

    Hello:
      $ref: '../models/schemas.yaml#/HelloSchema'
  
  parameters:
    DateTimeParam:
      $ref: '../models/parameters.yaml#/DateTimeParam'
      
    PointParam:
      $ref: '../models/parameters.yaml#/PointParam'

    PointsParam:
      $ref: '../models/parameters.yaml#/PointsParam'

    IdParam:
      $ref: '../models/parameters.yaml#/IdParam'

    HistoricalParam:
      $ref: '../models/parameters.yaml#/HistoricalParam'

    ExactParam:
      $ref: '../models/parameters.yaml#/ExactParam'

  responses:
    MultiWeather:
      $ref: '../models/responses.yaml#/MultiWeatherResponse'

    SingleWeather:
      $ref: '../models/responses.yaml#/SingleWeatherResponse'

    LegacyImport:
      $ref: '../models/responses.yaml#/LegacyImportResponse'

    ExternalError:
      $ref: '../models/responses.yaml#/ExternalErrorResponse'
      
    CommonMalformed:
      $ref: '../models/responses.yaml#/CommonMalformedErrorResponse'
    
    CommonNotFound:
      $ref: '../models/responses.yaml#/CommonNotFoundErrorResponse'